---
layout: post
title:  "数据库系统 Database system"
categories: “Database”
permalink: :/categories/:day/:month:/year
---

## 数据模型

数据模型的基本组成包括实体（entity），属性（attribute），联系（relationship）和约束。

### 数据模型的组成

**实体**可以是任何事物，其为数据收集和存储对应的特定对象。例如，客户。

**属性**用于描述实体的特征。例如，客户的姓名，电话，地址。

**联系**用于描述实体间的联系。例如，代理人为客户服务。

联系有三种种类：

* 一对多（1 ：M）联系。例如，一位客户（CUSTOMER）可能产生多张发票（INVOICE），每张发票（INVOICE）只能由一个客户（CUSTOMER）产生。
* 多对多（M : M）联系。例如，一位代理人（AGENT）可以代理多种业务（BUSINESS），一种业务（BUSINESS）也可以由多个代理人（AGENT）代理。
* 一对一（1 ：1）联系。例如，一家公司（COMPANY）由一个经理（MANAGER）管理，一个经理（MANAGER）管理一家公司（COMPANY）。

### 业务规则（business rules）

喜欢抬杠的同学可能会说，刚刚的例子不对，一家公司可能不只是一个经理管理。这就是我们要讨论的问题，业务规则。在建立数据模型的时候，数据只有在其能正确反应所定义的业务规则时才有意义。**业务规则**是对特定组织的策略，规程和准则的简要清晰和无歧义的描述。业务规则的讨论和斟酌贯穿数据建模和数据库设计。

如何将现实的问题，合理的转化为数据模型，拆分成实体属性和联系是重点。

## 实体联系模型

在接下来的学习学习中，我们运用的是实体联系模型（entity-relationship）。它于1976年由Pter Chen提出。与其配套使用的还有鸦足标示法（Crow's foot notation）。ER图用来表示面向终端用户所看到的的概念数据。它用于描述数据库的主要组件，包括实体，属性和联系。

以下为设计相关概念的汇总表：

| 概念名词                          | 解释                                                         |
| --------------------------------- | ------------------------------------------------------------ |
| 实体（entity）                    | 实体是终端用户感兴趣的对象。在ER模型中，实体对应关系中的一张表 |
| 属性（attribute）                 | 属性是实体的特征。在鸦足标记法中，属性写在实体矩形下面的属性框中。 |
| 域（domains）                     | 域是给定属性的可能取值的集合。                               |
| 主码（identifiers/primary key）   | 主码是一个或多个可以唯一标识每个实体的属性。                 |
| 复合属性（composite attribute）   | 复合属性是可以继续细分的属性。（例如，地址划分为街道，地区） |
| 复合码（composite key）           | 复合码是由多个属性组成的码。                                 |
| 单值属性（single attribute）      | 单值属性是只有单一值的属性。                                 |
| 多值属性（multivalued attribute） | 多值属性是允许有多个值的属性。                               |
| 派生属性（derived attribute）     | 派生属性是指可以通过已有属性运算得的属性。                   |

#### 实现多值属性

在RDVMS中无法实现多值属性，因此可将复合属性分解为为多个单值属性。但是这会导致过多空值。常见的做法是构建一个由原始多值属性中成分组成的新实体。

### 互连（connectivities）和基数（cardinalities）

